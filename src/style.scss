$color: rgb(random(100), random(100), random(100));

$text: #333;
// functions
// xs
@mixin xs {
  @media (max-width: 576px) {
    @content;
  }
}

//// Small devices (landscape phones, 576px and up)
@mixin sm {
  @media (min-width: 577px) {
    @content;
  }
}

// Medium devices (tablets, 768px and up)
@mixin md {
  @media (min-width: 768px) {
    @content;
  }
}

// Large devices (desktops, 992px and up)
@mixin lg {
  @media (min-width: 992px) {
    @content;
  }
}

// Extra large devices (large desktops, 1200px and up)
@mixin xl {
  @media (min-width: 1200px) {
    @content;
  }
}
//
body {
  background-color: rgba($color, 0.2);
  color: $text;
  box-sizing: border-box;
  scroll-behavior: smooth;
}
.content {
  text-transform: capitalize;
  li {
    text-transform: initial;
  }
  h1 {
    text-align: center;
    margin-top: 5rem;
    @include xs {
      font-size: 2rem;
    }
  }
}
.grid-parent {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  gap: 1rem;
  @include xs {
    grid-template-columns: 1fr;
  }
  @include sm {
    grid-template-columns: 1fr;
  }
  @include md {
    grid-template-columns: 1fr 1fr;
  }
  @include xl {
    grid-template-columns: 1fr 1fr 1fr;
  }
}
.group {
  background-color: #fff;
  border-radius: 10px;
  overflow: hidden;

  &.expanded ul {
    margin: 0.5rem;
    @include xs {
      height: initial;
    }
    @include sm {
      height: 15rem;
    }
  }
  h2 {
    padding: 1rem;
    // filter:drop-shadow(0px 0px 0px red);
    // text-align: center;
    margin: 0;
    color: white;
    background-color: rgba($color, 0.5);
    cursor: pointer;
    // & span > span:nth-of-type(n-2) {
    //   background: red;
    // }
  }
  ul {
    list-style: none;
    // padding: 1rem 1rem 2rem;
    padding: 0;
    height: 0;
    transition: 0.3s height;
    margin: 0;
  }
  li {
    background-color: rgba($color, 0.05);
    margin-bottom: 0.2rem;
    padding: 0.2rem 0.5rem;
    overflow: hidden;
    .item {
      color: #fff;
      background-color: $color;
      margin: 0.1rem;
      padding: 0px 0.3rem;
      border-radius: 1rem;
      float: right;
      a:hover {
        color: #fff;
      }
    }
  }
  button {
    width: 100%;
    margin: 1rem auto;
    border-radius: 5px;
    display: block;
    text-transform: uppercase;
    padding: 0.3rem;
    border: 1px solid $color;

    &.more {
      background-color: $color;
      color: white;
    }
    &.less {
      background-color: white;
      color: $color;
    }
  }
}
a {
  color: inherit;
  text-decoration: capitalize;
  text-decoration: none;
  &:hover {
    text-decoration: none;
  }
}
.fw-bold {
  font-weight: bold;
}
span.tag {
  color: #fff;
  background-color: $color;
  margin: 0.1rem;
  padding: 0px 0.3rem;
  border-radius: 1rem;
  float: right;
  a:hover {
    color: #fff;
  }
}
.text-underline {
  text-decoration: underline;
}

.search-form {
  width: 400px;
  max-width: 100%;
  padding: 1rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  @include xs {
    padding: 0.5rem;
  }
  .form-control:focus {
    border-color: $color;
    box-shadow: 0 0 0 0.2rem rgba($color, 25%);
  }
  .search-form-button {
    background-color: $color;
    color: white;
    padding: 0.3rem 0.5rem;
    margin: 1rem auto;
    border-radius: 5px;
    display: block;
    text-transform: uppercase;
    border: 1px solid $color;
  }
}
.select-text {
  background: rgba($color, 0.8);
  color: white;
}
$height: 2rem;
$light-gray: #dedede;
.custom-toggle {
  user-select: none;
  width: $height * 2;
  height: $height;
  position: relative;
  overflow: hidden;

  label {
    width: $height * 2;
    height: $height;
    border-radius: $height/2;
    background-color: rgba($text, 0.3);
    cursor: pointer;
    display: block;
    &:active:after {
      width: $height * 1.5;
    }
    &:after {
      width: $height * 0.8;
      height: $height * 0.8;
      background-color: $text;
      content: "";
      position: absolute;
      border-radius: $height;
      top: 0;
      left: 0;
      transition: all 0.5s;
      margin: $height * 0.1;
    }
    .text {
      display: flex;
      justify-content: space-around;
      align-items: center;
      font-size: $height/2;
      width: 100%;
      height: 100%;
      user-select: none;
      .on {
        color: white;
      }
      .off {
        color: $text;
      }
    }
  }
  input {
    display: none;
    &:checked {
      & + label {
        background-color: rgba($color, 0.3);
        &:after {
          left: unset;
          background-color: $color;
          right: 0.1 * $height;
          transform: translateX(0.1 * $height);
        }
      }
    }
  }
}
.gap-2 {
  gap: 0.5rem;
}
.tile {
  display: block;
  float: left;
  width: 100px;
  height: 100px;
  margin: 20px;
}
.tile img {
  display: block;
  width: 100px;
  height: 100px;
}
.transform-rotate-90 {
  transform: rotate(180deg);
}
.transition {
  transition: 0.3s transform;
}
.github-fork-ribbon:before {
  background-color: $color;
  color: white;
}
.scroll-top {
  appearance: none;
  cursor: pointer;
  background-color: $color;
  color: white;
  width: 3rem;
  height: 3rem;
  position: fixed;
  bottom: 2rem;
  right: 2rem;
  border-radius: 0.5rem;
  display: flex;
  justify-content: center;
  align-items: center;
  opacity: 0%;
  &.visible {
    animation: 0.3s opacity both;
  }
}
a:hover {
  color: $color;
}
@keyframes opacity {
  100% {
    opacity: 100%;
  }
}
.user-select-all {
  user-select: all;
}
.cursor-pointer{
  cursor: pointer;
}